[{"/Users/john/Desktop/john-schriemer.ca/src/index.tsx":"1","/Users/john/Desktop/john-schriemer.ca/src/App.tsx":"2","/Users/john/Desktop/john-schriemer.ca/src/pages/About/index.tsx":"3","/Users/john/Desktop/john-schriemer.ca/src/pages/Home/index.tsx":"4","/Users/john/Desktop/john-schriemer.ca/src/pages/Contact/index.tsx":"5","/Users/john/Desktop/john-schriemer.ca/src/pages/Work/index.tsx":"6","/Users/john/Desktop/john-schriemer.ca/src/components/ExpCard/index.tsx":"7","/Users/john/Desktop/john-schriemer.ca/src/components/Nav/index.tsx":"8","/Users/john/Desktop/john-schriemer.ca/src/utils/transitions/once.ts":"9","/Users/john/Desktop/john-schriemer.ca/src/utils/transitions/svg.ts":"10","/Users/john/Desktop/john-schriemer.ca/src/utils/transitions/slideDown.ts":"11"},{"size":181,"mtime":1699739652520,"results":"12","hashOfConfig":"13"},{"size":3213,"mtime":1700635245586,"results":"14","hashOfConfig":"13"},{"size":1049,"mtime":1700457947722,"results":"15","hashOfConfig":"13"},{"size":4188,"mtime":1700634039190,"results":"16","hashOfConfig":"13"},{"size":3329,"mtime":1700357516262,"results":"17","hashOfConfig":"13"},{"size":2102,"mtime":1700357342947,"results":"18","hashOfConfig":"13"},{"size":2132,"mtime":1700357327054,"results":"19","hashOfConfig":"13"},{"size":6651,"mtime":1700633833961,"results":"20","hashOfConfig":"13"},{"size":563,"mtime":1700635336561,"results":"21","hashOfConfig":"13"},{"size":782,"mtime":1700635275266,"results":"22","hashOfConfig":"13"},{"size":465,"mtime":1700634272824,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1qqnhht",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/john/Desktop/john-schriemer.ca/src/index.tsx",[],[],["62","63","64","65","66","67"],"/Users/john/Desktop/john-schriemer.ca/src/App.tsx",[],[],"/Users/john/Desktop/john-schriemer.ca/src/pages/About/index.tsx",[],[],"/Users/john/Desktop/john-schriemer.ca/src/pages/Home/index.tsx",["68","69","70","71"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport forefrontImage from \"../../assets/images/header-forefront.png\";\nimport headerBackground from \"../../assets/images/header-background.png\";\nimport { motion } from \"framer-motion\";\nimport logoFilled from \"../../assets/images/logo-filled.svg\";\nimport Nav from \"../../components/Nav\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport AlternateEmailIcon from \"@mui/icons-material/AlternateEmail\";\n\nconst words = [\n  \"based\",\n  \"in\",\n  \"victoria\",\n  \"BC\",\n  \"a\",\n  \"hopeful\",\n  \"tech\",\n  \"optimist\",\n  \"will\",\n  \"a\",\n  \"radical\",\n  \"redesign\",\n  \"save\",\n  \"us\",\n  \"all?\",\n];\n\nconst HomePage = () => {\n  const [rows, setRows] = useState([words]);\n\n  const wordRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (wordRef.current) {\n      const newRows = [];\n      let currentRow: string[] = [];\n      let currentRowWidth = 0;\n\n      words.forEach((word) => {\n        const wordWidth = wordRef?.current?.offsetWidth ?? 0;\n        if (currentRowWidth + wordWidth > 300 && currentRow.length >= 2) {\n          newRows.push(currentRow);\n          currentRow = [word];\n          currentRowWidth = wordWidth;\n        } else {\n          currentRow.push(word);\n          currentRowWidth += wordWidth;\n        }\n      });\n\n      newRows.push(currentRow);\n\n      setRows(newRows);\n    }\n  }, []);\n\n  return (\n    <Grid\n      container\n      sx={{\n        overflow: \"hidden\",\n        backgroundImage: `url(${headerBackground})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        height: \"100vh\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        position: \"relative\",\n      }}\n    >\n      {/* Forefront Image */}\n      <motion.div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100vh\",\n          top: 0,\n          left: 0,\n        }}\n      >\n        <img\n          src={forefrontImage}\n          alt=\"Forefront\"\n          style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\n        />\n      </motion.div>\n\n      {/* Header */}\n      <Nav />\n\n      {/* Center logo  */}\n      <Grid item sx={{ alignSelf: \"center\", color: \"#EDE5D8\" }}>\n        <Grid container sx={{ flexDirection: \"column\", position: \"relative\" }}>\n          <img\n            src={logoFilled}\n            alt=\"Forefront\"\n            style={{ width: \"100%\", height: \"100%\", objectFit: \"contain\" }}\n          />\n\n          <Typography\n            variant=\"h5\"\n            style={{\n              fontWeight: \"1000\",\n              position: \"absolute\",\n              bottom: 50,\n              left: \"29%\",\n              color: 'white'\n            }}\n          >\n            design & development\n          </Typography>\n        </Grid>\n      </Grid>\n\n      {/* Off center body text(do not render if mobile) */}\n      <Grid\n        item\n        sx={{\n          position: \"absolute\",\n          bottom: 280,\n          right: 100,\n          color: \"#EDE5D8\",\n          width: \"300px\",\n        }}\n      >\n        {/*\n          design impacts our environment and  \n          our environment shapes the life we lead. \n          I am dedicated to creating designs that \n          not only serve a purpose but also contribute \n          positively to the world we all inhabit\n        */}\n        <Grid container sx={{ flexDirection: \"column\" }}>\n          {/* 1st line*/}\n          {/* <Grid item>\n            {rows.map((row, rowIndex) => (\n              <Grid\n                container\n                key={rowIndex}\n                sx={{ justifyContent: \"space-between\" }}\n              >\n                {row.map((word, wordIndex) => (\n                  <Typography\n                    variant=\"h4\"\n                    key={wordIndex}\n                    ref={wordIndex === 0 && rowIndex === 0 ? wordRef : null}\n                  >\n                    {word}\n                  </Typography>\n                ))}\n              </Grid>\n            ))}\n          </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default HomePage;\n","/Users/john/Desktop/john-schriemer.ca/src/pages/Contact/index.tsx",["72"],[],"import { Grid, Typography } from \"@mui/material\";\nimport forefrontImage from \"../../assets/images/header-forefront.png\";\nimport { motion } from \"framer-motion\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport AlternateEmailIcon from \"@mui/icons-material/AlternateEmail\";\nimport ArrowOutwardIcon from \"@mui/icons-material/ArrowOutward\";\nimport IMG_6775 from \"../../assets/images/IMG_6775.png\";\n\nexport default function Contact() {\n  return (\n    <Grid\n      container\n      sx={{\n        height: \"100vh\",\n        backgroundColor: \"#E5D6C4\",\n        color: \"#FFC41A\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n        alignItems: \"flex-start\",\n        position: \"relative\",\n        px: 20,\n        backgroundImage: `url(${IMG_6775})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      {/* Footer text block*/}\n      {/* to do add glass effect on box */}\n      <Grid item sx={{ border: 1 }}>\n        <Grid container sx={{ flexDirection: \"column\" }}>\n          <Typography variant=\"h1\">Contact</Typography>\n          <Typography variant=\"h6\" sx={{ maxWidth: \"600px\" }}>\n            Always looking for opportunities to co-create something great.\n            Reachable via email, other socials provided if needed.\n          </Typography>\n          <Grid item sx={{ width: \"100px\", mt: 1 }}>\n            <Grid\n              container\n              sx={{ flexWrap: \"nowrap\", justifyContent: \"space-between\" }}\n            >\n              <GitHubIcon />\n              <LinkedInIcon />\n              <AlternateEmailIcon />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid\n        item\n        sx={{\n          alignSelf: \"flex-end\",\n          mr: 0,\n          border: 1,\n          height: \"600px\",\n          width: \"400px\",\n          backgroundImage: `url(${IMG_6775})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <Grid\n          container\n          sx={{\n            flexWrap: \"nowrap\",\n            color: \"#FFC41A\",\n            flexDirection: \"column\",\n            justifyContent: \"flex-end\",\n            position: \"relative\",\n          }}\n        >\n          {/*  Contact */}\n          <Grid\n            item\n            sx={{\n              alignSelf: \"flex-end\",\n              position: \"absolute\",\n              bottom: 10,\n              right: 0,\n            }}\n          >\n            <Grid container sx={{ alignItems: \"center\" }}>\n              <Typography variant=\"h4\">contact&nbsp;</Typography>\n              <Grid item>\n                <ArrowOutwardIcon\n                  sx={{\n                    transform: \"scale(1.8)\",\n\n                    strokeColor: \"#E5D6C4\",\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* Footer image */}\n      <motion.div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          //height: \"100vh\",\n          bottom: -2000,\n          left: 0,\n        }}\n      >\n        <img\n          src={IMG_6775}\n          alt=\"Forefront\"\n          style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\n        />\n      </motion.div>\n    </Grid>\n  );\n}\n","/Users/john/Desktop/john-schriemer.ca/src/pages/Work/index.tsx",["73","74","75"],[],"import { Grid, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { ExpCard } from \"../../components/ExpCard\";\n\nexport interface EXPType {\n  title: string;\n  description: string;\n  jobTitle: string;\n  term: string;\n  backgroundColor: string;\n  hoverBackgroundColor: string;\n  hoverTextColor: string;\n}\n\nconst EXP = [\n  {\n    title: \"Natureblocks\",\n    description: \"\",\n    jobTitle: \"frontend developer\",\n    term: \"2022 - Present\",\n    backgroundColor: \"#E42966\",\n    hoverBackgroundColor: \"limegreen\",\n    hoverTextColor: \"white\",\n  },\n  {\n    title: \"Semios\",\n    description:\n      \"A Minecraft mod that adds a variety of new blocks and items to the game.\",\n    jobTitle: \"fullstack developer\",\n    term: \"2021\",\n    backgroundColor: \"#E42966\",\n    hoverBackgroundColor: \"aquamarine\",\n    hoverTextColor: \"white\",\n  },\n  {\n    title: \"Redbrick\",\n    description:\n      \"A Minecraft mod that adds a variety of new blocks and items to the game.\",\n    jobTitle: \"fullstack developer\",\n    term: \"2021\",\n    backgroundColor: \"#E42966\",\n    hoverBackgroundColor: \"black\",\n    hoverTextColor: \"white\",\n  },\n  {\n    title: \"University of Victoria\",\n    description:\n      \"A Minecraft mod that adds a variety of new blocks and items to the game.\",\n    jobTitle: \"software engineering\",\n    term: \"2016 - 2022\",\n    backgroundColor: \"#E42966\",\n    hoverBackgroundColor: \"goldenrod\",\n    hoverTextColor: \"white\",\n  },\n];\n\nexport default function Work() {\n  const [hoveredItem, setHoveredItem] = useState<number | null>(null);\n\n  return (\n    <Grid\n      container\n      sx={{\n        height: \"100vh\",\n        backgroundColor: \"#E42966\",\n        gridTemplateColumns: \"1fr\",\n        flexDirection: \"row\",\n        flexWrap: \"noWrap\",\n        width: \"100%\",\n      }}\n    >\n      {EXP.map((exp, idx) => (\n        <ExpCard\n          exp={exp}\n          isHovering={hoveredItem === idx}\n          onMouseEnter={() => setHoveredItem(idx)}\n          onMouseLeave={() => setHoveredItem(null)}\n        />\n      ))}\n    </Grid>\n  );\n}\n","/Users/john/Desktop/john-schriemer.ca/src/components/ExpCard/index.tsx",[],[],"/Users/john/Desktop/john-schriemer.ca/src/components/Nav/index.tsx",["76","77","78","79","80","81"],[],"import React, { useEffect, useState } from \"react\";\nimport { Grid, Button, Typography } from \"@mui/material\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport contact from \"../../assets/images/contact.svg\";\nimport portfolio from \"../../assets/images/portfolio.svg\";\nimport about from \"../../assets/images/about.svg\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport AlternateEmailIcon from \"@mui/icons-material/Email\";\nimport { gsap } from \"gsap\";\nimport { ReactComponent as PortfolioIcon } from \"../../assets/images/portfolio.svg\";\nimport { ReactComponent as AboutIcon } from \"../../assets/images/about.svg\";\nimport { ReactComponent as ContactIcon } from \"../../assets/images/contact.svg\";\n\nconst icons = [\n  {\n    Component: GitHubIcon,\n    alt: \"GitHub\",\n    x: 0,\n    y: 0,\n    morph: \"M10 80 Q 95 10 180 80\",\n    link: \"https://github.com/\",\n  },\n  {\n    Component: LinkedInIcon,\n    alt: \"LinkedIn\",\n    x: 0,\n    y: 0,\n    morph: \"M10 80 Q 95 10 180 80\",\n    link: \"https://linkedin.com/\",\n  },\n  {\n    Component: AlternateEmailIcon,\n    alt: \"Email\",\n    x: 0,\n    y: 0,\n    morph: \"M10 80 Q 95 10 180 80\",\n    link: \"mailto:example@example.com\",\n  },\n];\n\nconst Navbar: React.FC = () => {\n  const controls = useAnimation();\n  const [lastScrollY, setLastScrollY] = useState(0);\n  const [scrollSpeed, setScrollSpeed] = useState(0);\n  const iconRefs = icons.map(() => React.createRef<HTMLImageElement>());\n  const contactRef = React.createRef<SVGSVGElement>();\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleScroll = () => {\n    const currentScrollY = window.scrollY;\n    const speed = Math.abs(currentScrollY - lastScrollY);\n    setScrollSpeed(speed);\n    setLastScrollY(currentScrollY);\n\n    // Adjust the animation based on scroll speed\n    controls.start({\n      rotate: 90,\n      x: \"100vw\",\n      transition: { duration: Math.min(0.5, 0.1 + speed / 1000) },\n    });\n  };\n\n  const shakeAnimation = {\n    x: [0, 1, 2, 3, 4, -1, 0],\n    y: [0, -1, -2, -3, -4, 1, 0],\n    transition: { duration: 0.45 },\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [lastScrollY, scrollSpeed]);\n\n  return (\n    <motion.div\n      initial={false}\n      style={{ position: \"fixed\", top: 0, left: 0, width: \"100%\" }}\n    >\n      <Grid item sx={{ p: 1, px: 4 }}>\n        <Grid\n          container\n          sx={{\n            justifyContent: \"space-between\",\n            color: \"#EDE5D8\",\n            p: 2,\n            flexWrap: \"nowrap\",\n          }}\n        >\n          <Link\n            to=\"/about\"\n            data-barba=\"link\"\n            style={{ color: \"#EDE5D8\", textDecoration: \"none\", border: 1 }}\n          >\n            <AboutIcon style={{ width: \"200px\", height: \"80px\" }} />\n          </Link>\n          <Link\n            to=\"/portfolio\"\n            data-barba=\"link\"\n            style={{ color: \"#EDE5D8\", textDecoration: \"none\", border: 1 }}\n          >\n            <PortfolioIcon style={{ width: \"220px\", height: \"80px\" }} />\n          </Link>\n         {/*  <Grid item>\n            {icons.map((icon, index) => (\n              <div\n                ref={iconRefs[index]}\n                style={{\n                  position: \"absolute\",\n                  left: icon.x,\n                  top: icon.y,\n\n                  opacity: isVisible ? 1 : 0,\n                }}\n              >\n                <icon.Component sx={{ transform: \"scale(1.2)\" }} />\n              </div>\n            ))} */}\n            {icons.map((icon, index) => (\n              <div\n                ref={iconRefs[index]}\n                style={{\n                  position: \"absolute\",\n                  left: icon.x,\n                  top: icon.y,\n\n                  opacity: isVisible ? 1 : 0,\n                }}\n              >\n                <icon.Component sx={{ transform: \"scale(1.2)\" }} />\n              </div>\n            ))}\n\n            <Link\n              to=\"/\"\n              data-barba=\"link\"\n              style={{ color: \"#EDE5D8\", textDecoration: \"none\", border: 1 }}\n            >\n              \n              {/* is mobile ? do not render instead render icons already displayed on bottom of screen */}\n              <motion.div\n                animate={controls}\n                onClick={() => {\n                  setIsVisible(false); // Immediately set isVisible to false when the component is clicked\n                  controls.start(shakeAnimation);\n                  setTimeout(() => setIsVisible(true), 400); // Delay the state change to true by 0.4 seconds\n                }}\n              >\n                \n                <ContactIcon\n                  ref={contactRef}\n                  data-barba=\"link\"\n                  style={{\n                    width: \"200px\",\n                    height: \"80px\",\n                    border: 3,\n\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => {\n                    if (contactRef.current) {\n                      const rect = contactRef.current.getBoundingClientRect();\n                      iconRefs.forEach((ref, idx) => {\n                        if (ref.current) {\n                          gsap.set(ref.current, {\n                            x: rect.left + 30,\n                            y: rect.top + 50,\n                          });\n                          gsap.to(ref.current, {\n                            x: -50 + rect.left + Math.random() * 200 - 50 * idx,\n                            y: 150 + rect.top + Math.random() * 100 - 50 * idx,\n                            duration: 1.2,\n                            delay: 0.5,\n                          });\n                        }\n                      });\n                    }\n                  }}\n                  onMouseEnter={() => {\n                    if (contactRef.current) {\n                      gsap.to(contactRef.current, {\n                        fill: \"red\",\n                        duration: 5,\n                      });\n                    }\n                  }}\n                  onMouseLeave={() => {\n                    if (contactRef.current) {\n                      gsap.to(contactRef.current, {\n                        color: \"transparent\",\n                        duration: 5,\n                      });\n                    }\n                  }}\n                />\n              </motion.div>\n            </Link>\n          </Grid>\n        </Grid>\n      {/* </Grid> */}\n    </motion.div>\n  );\n};\n\nexport default Navbar;\n","/Users/john/Desktop/john-schriemer.ca/src/utils/transitions/once.ts",[],["82"],"/Users/john/Desktop/john-schriemer.ca/src/utils/transitions/svg.ts",[],["83"],"/Users/john/Desktop/john-schriemer.ca/src/utils/transitions/slideDown.ts",[],["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":20},{"ruleId":"97","severity":1,"message":"102","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":26},{"ruleId":"97","severity":1,"message":"103","line":31,"column":10,"nodeType":"99","messageId":"100","endLine":31,"endColumn":14},{"ruleId":"97","severity":1,"message":"104","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"105","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"106","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":19},{"ruleId":"97","severity":1,"message":"107","line":3,"column":21,"nodeType":"99","messageId":"100","endLine":3,"endColumn":29},{"ruleId":"97","severity":1,"message":"108","line":2,"column":16,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"105","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":34},{"ruleId":"97","severity":1,"message":"109","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":15},{"ruleId":"97","severity":1,"message":"110","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":17},{"ruleId":"97","severity":1,"message":"111","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":77,"column":6,"nodeType":"114","endLine":77,"endColumn":32,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":4,"column":1,"nodeType":"118","endLine":25,"endColumn":2,"suppressions":"119"},{"ruleId":"116","severity":1,"message":"117","line":4,"column":1,"nodeType":"118","endLine":34,"endColumn":2,"suppressions":"120"},{"ruleId":"116","severity":1,"message":"117","line":4,"column":1,"nodeType":"118","endLine":19,"endColumn":2,"suppressions":"121"},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["122"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"@typescript-eslint/no-unused-vars","'GitHubIcon' is defined but never used.","Identifier","unusedVar","'LinkedInIcon' is defined but never used.","'AlternateEmailIcon' is defined but never used.","'rows' is assigned a value but never used.","'forefrontImage' is defined but never used.","'Typography' is defined but never used.","'useSpring' is defined but never used.","'animated' is defined but never used.","'Button' is defined but never used.","'contact' is defined but never used.","'portfolio' is defined but never used.","'about' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["123"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["124"],["125"],["126"],"no-object-constructor",{"desc":"127","fix":"128"},{"kind":"129","justification":"130"},{"kind":"129","justification":"130"},{"kind":"129","justification":"130"},"Update the dependencies array to be: [handleScroll, lastScrollY, scrollSpeed]",{"range":"131","text":"132"},"directive","",[2322,2348],"[handleScroll, lastScrollY, scrollSpeed]"]