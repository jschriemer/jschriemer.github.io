{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/john-schriemer.ca/src/pages/Contact.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst tablet = `@media (max-width: 800px)`;\nconst mobile = `@media (max-width: 500px)`;\n\nconst resolver = async values => {\n  return {\n    values: values.firstName ? values : {},\n    errors: !values.firstName ? {\n      firstName: {\n        type: \"required\",\n        message: \"This is required.\"\n      }\n    } : {}\n  };\n};\n\nfunction Contact() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver\n  });\n  const onSubmit = handleSubmit(data => console.log(data));\n  return _jsxDEV(\"div\", {\n    children: _jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [_jsxDEV(\"input\", { ...register(\"firstName\"),\n        placeholder: \"Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.firstName) && _jsxDEV(\"p\", {\n        children: errors.firstName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 31\n      }, this), _jsxDEV(\"input\", { ...register(\"lastName\"),\n        placeholder: \"Luo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), _jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/john/Desktop/john-schriemer.ca/src/pages/Contact.tsx"],"names":["React","useForm","tablet","mobile","resolver","values","firstName","errors","type","message","Contact","register","handleSubmit","formState","onSubmit","data","console","log"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAkC,iBAAlC;;AAEA,MAAMC,MAAM,GAAI,2BAAhB;AACA,MAAMC,MAAM,GAAI,2BAAhB;;AAOA,MAAMC,QAA8B,GAAG,MAAOC,MAAP,IAAkB;AACvD,SAAO;AACLA,IAAAA,MAAM,EAAEA,MAAM,CAACC,SAAP,GAAmBD,MAAnB,GAA4B,EAD/B;AAELE,IAAAA,MAAM,EAAE,CAACF,MAAM,CAACC,SAAR,GACJ;AACEA,MAAAA,SAAS,EAAE;AACTE,QAAAA,IAAI,EAAE,UADG;AAETC,QAAAA,OAAO,EAAE;AAFA;AADb,KADI,GAOJ;AATC,GAAP;AAWD,CAZD;;AAcA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AAHP,MAIFN,OAAO,CAAa;AAAEG,IAAAA;AAAF,GAAb,CAJX;AAKA,QAAMU,QAAQ,GAAGF,YAAY,CAAEG,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAX,CAA7B;AAEA,SACE;AAAA,cACE;AAAM,MAAA,QAAQ,EAAED,QAAhB;AAAA,iBACE,sBAAWH,QAAQ,CAAC,WAAD,CAAnB;AAAkC,QAAA,WAAW,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAED,SAAR,KAAqB;AAAA,kBAAIC,MAAM,CAACD,SAAP,CAAiBG;AAArB;AAAA;AAAA;AAAA;AAAA,cAFxB,EAIE,sBAAWE,QAAQ,CAAC,UAAD,CAAnB;AAAiC,QAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAJF,EAME;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApBQD,O;UAKHT,O;;;KALGS,O;AAsBT,eAAeA,OAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { useForm, Resolver } from \"react-hook-form\";\n\nconst tablet = `@media (max-width: 800px)`;\nconst mobile = `@media (max-width: 500px)`;\n\ntype FormValues = {\n  firstName: string;\n  lastName: string;\n};\n\nconst resolver: Resolver<FormValues> = async (values) => {\n  return {\n    values: values.firstName ? values : {},\n    errors: !values.firstName\n      ? {\n          firstName: {\n            type: \"required\",\n            message: \"This is required.\",\n          },\n        }\n      : {},\n  };\n};\n\nfunction Contact() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormValues>({ resolver });\n  const onSubmit = handleSubmit((data) => console.log(data));\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input {...register(\"firstName\")} placeholder=\"Bill\" />\n        {errors?.firstName && <p>{errors.firstName.message}</p>}\n\n        <input {...register(\"lastName\")} placeholder=\"Luo\" />\n\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}