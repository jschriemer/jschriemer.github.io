{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/john-schriemer.ca/src/pages/Contact.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst tablet = `@media (max-width: 800px)`;\nconst mobile = `@media (max-width: 500px)`;\n\nconst resolver = async values => {\n  return {\n    values: values.firstName ? values : {},\n    errors: !values.firstName ? {\n      firstName: {\n        type: 'required',\n        message: 'This is required.'\n      }\n    } : {}\n  };\n};\n\nfunction Contact() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver\n  });\n  const onSubmit = handleSubmit(data => console.log(data));\n  return _jsxDEV(\"div\", {\n    children: _jsxDEV(\"form\", {\n      id: \"contact-form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [errors.user_name && errors.user_name.type === \"required\" && _jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Name is required\", _jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), _jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"user_name\",\n        placeholder: \"Name\",\n        maxLength: 30,\n        \"aria-invalid\": errors.user_name ? \"true\" : \"false\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), _jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), _jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"user_email\",\n        ref: register,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), _jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), _jsxDEV(\"textarea\", {\n        name: \"message\",\n        ref: register,\n        placeholder: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), _jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), _jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/john/Desktop/john-schriemer.ca/src/pages/Contact.tsx"],"names":["React","useForm","tablet","mobile","resolver","values","firstName","errors","type","message","Contact","register","handleSubmit","formState","onSubmit","data","console","log","user_name","required"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAkC,iBAAlC;;AAEA,MAAMC,MAAM,GAAI,2BAAhB;AACA,MAAMC,MAAM,GAAI,2BAAhB;;AAOA,MAAMC,QAA8B,GAAG,MAAOC,MAAP,IAAkB;AACvD,SAAO;AACLA,IAAAA,MAAM,EAAEA,MAAM,CAACC,SAAP,GAAmBD,MAAnB,GAA4B,EAD/B;AAELE,IAAAA,MAAM,EAAE,CAACF,MAAM,CAACC,SAAR,GACJ;AACEA,MAAAA,SAAS,EAAE;AACTE,QAAAA,IAAI,EAAE,UADG;AAETC,QAAAA,OAAO,EAAE;AAFA;AADb,KADI,GAOJ;AATC,GAAP;AAWD,CAZD;;AAcA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AAArC,MAAoDN,OAAO,CAAa;AAAEG,IAAAA;AAAF,GAAb,CAAjE;AACA,QAAMU,QAAQ,GAAGF,YAAY,CAAEG,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAX,CAA7B;AAEA,SACE;AAAA,cACE;AAAM,MAAA,EAAE,EAAC,cAAT;AAAwB,MAAA,QAAQ,EAAEH,YAAY,CAACE,QAAD,CAA9C;AAAA,iBACGP,MAAM,CAACW,SAAP,IAAoBX,MAAM,CAACW,SAAP,CAAiBV,IAAjB,KAA0B,UAA9C,IACC;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA,uCAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,WAAW,EAAC,MAHd;AAIE,QAAA,SAAS,EAAE,EAJb;AAKE,wBAAcD,MAAM,CAACW,SAAP,GAAmB,MAAnB,GAA4B,OAL5C;AAME,QAAA,GAAG,EAAEP,QAAQ,CAAC;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SAAD;AANf;AAAA;AAAA;AAAA;AAAA,cAPF,EAeE;AAAA;AAAA;AAAA;AAAA,cAfF,EAgBE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,GAAG,EAAER,QAHP;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAhBF,EAsBE;AAAA;AAAA;AAAA;AAAA,cAtBF,EAuBE;AAAU,QAAA,IAAI,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAEA,QAA9B;AAAwC,QAAA,WAAW,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,cAvBF,EAwBE;AAAA;AAAA;AAAA;AAAA,cAxBF,EAyBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAnCQD,O;UACmDT,O;;;KADnDS,O;AAqCT,eAAeA,OAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { useForm, Resolver } from \"react-hook-form\";\n\nconst tablet = `@media (max-width: 800px)`;\nconst mobile = `@media (max-width: 500px)`;\n\ntype FormValues = {\n  firstName: string;\n  lastName: string;\n};\n\nconst resolver: Resolver<FormValues> = async (values) => {\n  return {\n    values: values.firstName ? values : {},\n    errors: !values.firstName\n      ? {\n          firstName: {\n            type: 'required',\n            message: 'This is required.',\n          },\n        }\n      : {},\n  };\n};\n\nfunction Contact() {\n  const { register, handleSubmit, formState: { errors } } = useForm<FormValues>({ resolver });\n  const onSubmit = handleSubmit((data) => console.log(data));\n\n  return (\n    <div>\n      <form id=\"contact-form\" onSubmit={handleSubmit(onSubmit)}>\n        {errors.user_name && errors.user_name.type === \"required\" && (\n          <div role=\"alert\">\n            Name is required\n            <br />\n          </div>\n        )}\n        <input\n          type=\"text\"\n          name=\"user_name\"\n          placeholder=\"Name\"\n          maxLength={30}\n          aria-invalid={errors.user_name ? \"true\" : \"false\"}\n          ref={register({ required: true })}\n        />\n        <br />\n        <input\n          type=\"email\"\n          name=\"user_email\"\n          ref={register}\n          placeholder=\"Email\"\n        />\n        <br />\n        <textarea name=\"message\" ref={register} placeholder=\"Message\" />\n        <br />\n        <input type=\"submit\" value=\"Send\" />\n      </form>\n    </div>\n  );\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}