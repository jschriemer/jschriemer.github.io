{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/portfolio/src/components/AboutButton.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport \"../pages/home.scss\";\nimport { useTrail } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst StyledAboutButton = styled.button`\n  background-color: transparent;\n  border: none;\n  font-family: halyard-display, sans-serif;\n  letter-spacing: 1px;\n  text-indent: 1px;\n  text-transform: uppercase;\n  color: #aeff00;\n  border: none;\n\tpadding: 0;\n\tbackground: none;\n\ttransform: rotate(-90deg);\n\tfont-size: 2em;\n\tposition: absolute;\n\tright: 50px;\n  top: 170px;\n  z-index: 4000;\n  }\n`;\n_c = StyledAboutButton;\n\nconst Trail = ({\n  open,\n  children\n}) => {\n  _s();\n\n  const items = React.Children.toArray(children);\n  const trail = useTrail(items.length, {\n    config: {\n      mass: 5,\n      tension: 2000,\n      friction: 200\n    },\n    opacity: open ? 1 : 0,\n    x: open ? 0 : 20,\n    height: open ? 110 : 0,\n    from: {\n      opacity: 0,\n      x: 20,\n      height: 0\n    }\n  });\n  return _jsxDEV(\"div\", {\n    children: trail.map(({\n      height,\n      ...style\n    }, index) => _jsxDEV(\"div\", {\n      style: style,\n      children: _jsxDEV(\"div\", {\n        style: {\n          height\n        },\n        children: items[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Trail, \"K6MPM4NNUf2NQipcqSVMWb0gIKk=\", false, function () {\n  return [useTrail];\n});\n\n_c2 = Trail;\n\nfunction AboutButton() {\n  _s2();\n\n  const [open, set] = useState(false);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(StyledAboutButton, {\n      children: _jsxDEV(\"div\", {\n        className: \"link link--helike\",\n        onClick: () => set(state => !state),\n        children: _jsxDEV(\"span\", {\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), _jsxDEV(Trail, {\n      open: open,\n      children: [_jsxDEV(\"span\", {\n        children: \"Lorem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), _jsxDEV(\"span\", {\n        children: \"Ipsum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), _jsxDEV(\"span\", {\n        children: \"Dolor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), _jsxDEV(\"span\", {\n        children: \"Sit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(AboutButton, \"RuHSXjqpxJo7DfxbIeW9xG7XwZo=\");\n\n_c3 = AboutButton;\nexport default AboutButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledAboutButton\");\n$RefreshReg$(_c2, \"Trail\");\n$RefreshReg$(_c3, \"AboutButton\");","map":{"version":3,"sources":["/Users/john/Desktop/portfolio/src/components/AboutButton.tsx"],"names":["styled","React","useState","useTrail","StyledAboutButton","button","Trail","open","children","items","Children","toArray","trail","length","config","mass","tension","friction","opacity","x","height","from","map","style","index","AboutButton","set","state"],"mappings":";;;;AAAA;AACA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAwB,cAAxB;;;AAEA,MAAMC,iBAAiB,GAAGJ,MAAM,CAACK,MAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;KAAMD,iB;;AAoBN,MAAME,KAAkC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAAA;;AACjE,QAAMC,KAAK,GAAGR,KAAK,CAACS,QAAN,CAAeC,OAAf,CAAuBH,QAAvB,CAAd;AACA,QAAMI,KAAK,GAAGT,QAAQ,CAACM,KAAK,CAACI,MAAP,EAAe;AACnCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,IAApB;AAA0BC,MAAAA,QAAQ,EAAE;AAApC,KAD2B;AAEnCC,IAAAA,OAAO,EAAEX,IAAI,GAAG,CAAH,GAAO,CAFe;AAGnCY,IAAAA,CAAC,EAAEZ,IAAI,GAAG,CAAH,GAAO,EAHqB;AAInCa,IAAAA,MAAM,EAAEb,IAAI,GAAG,GAAH,GAAS,CAJc;AAKnCc,IAAAA,IAAI,EAAE;AAAEH,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,CAAC,EAAE,EAAjB;AAAqBC,MAAAA,MAAM,EAAE;AAA7B;AAL6B,GAAf,CAAtB;AAOA,SACE;AAAA,cACGR,KAAK,CAACU,GAAN,CAAU,CAAC;AAAEF,MAAAA,MAAF;AAAU,SAAGG;AAAb,KAAD,EAAuBC,KAAvB,KACT;AAAiB,MAAA,KAAK,EAAED,KAAxB;AAAA,gBACE;AAAK,QAAA,KAAK,EAAE;AAAEH,UAAAA;AAAF,SAAZ;AAAA,kBAAyBX,KAAK,CAACe,KAAD;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF,OAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlBD;;GAAMlB,K;UAEUH,Q;;;MAFVG,K;;AAoBN,SAASmB,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAAClB,IAAD,EAAOmB,GAAP,IAAcxB,QAAQ,CAAC,KAAD,CAA5B;AACA,SACE;AAAA,eACE,QAAC,iBAAD;AAAA,gBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,OAAO,EAAE,MAAMwB,GAAG,CAACC,KAAK,IAAI,CAACA,KAAX,CAArD;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEpB,IAAb;AAAA,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAeD;;IAjBQkB,W;;MAAAA,W;AAmBT,eAAeA,WAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"../pages/home.scss\";\nimport { useTrail} from 'react-spring';\n\nconst StyledAboutButton = styled.button`\n  background-color: transparent;\n  border: none;\n  font-family: halyard-display, sans-serif;\n  letter-spacing: 1px;\n  text-indent: 1px;\n  text-transform: uppercase;\n  color: #aeff00;\n  border: none;\n\tpadding: 0;\n\tbackground: none;\n\ttransform: rotate(-90deg);\n\tfont-size: 2em;\n\tposition: absolute;\n\tright: 50px;\n  top: 170px;\n  z-index: 4000;\n  }\n`;\n\nconst Trail: React.FC<{ open: boolean }> = ({ open, children }) => {\n  const items = React.Children.toArray(children)\n  const trail = useTrail(items.length, {\n    config: { mass: 5, tension: 2000, friction: 200 },\n    opacity: open ? 1 : 0,\n    x: open ? 0 : 20,\n    height: open ? 110 : 0,\n    from: { opacity: 0, x: 20, height: 0 },\n  })\n  return (\n    <div>\n      {trail.map(({ height, ...style }, index) => (\n        <div key={index} style={style}>\n          <div style={{ height }}>{items[index]}</div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nfunction AboutButton() {\n  const [open, set] = useState(false)\n  return (\n    <>\n      <StyledAboutButton>\n        <div className=\"link link--helike\" onClick={() => set(state => !state)}>\n          <span >About</span>\n        </div>\n      </StyledAboutButton>\n      <Trail open={open}>\n        <span>Lorem</span>\n        <span>Ipsum</span>\n        <span>Dolor</span>\n        <span>Sit</span>\n      </Trail>\n    </>\n  );\n}\n\nexport default AboutButton;\n"]},"metadata":{},"sourceType":"module"}